enum {
    GPU_SWAP_BUFFER_COUNT = 3,
    GPU_ATTRIBUTE_MAX = 16,
};

typedef enum gpu_pixel_format {
    _PIXELFORMAT_DEFAULT,    // value 0 reserved for default-init
    PIXELFORMAT_NONE,

    PIXELFORMAT_R8,
    PIXELFORMAT_R8SN,
    PIXELFORMAT_R8UI,
    PIXELFORMAT_R8SI,

    PIXELFORMAT_R16,
    PIXELFORMAT_R16SN,
    PIXELFORMAT_R16UI,
    PIXELFORMAT_R16SI,
    PIXELFORMAT_R16F,
    PIXELFORMAT_RG8,
    PIXELFORMAT_RG8SN,
    PIXELFORMAT_RG8UI,
    PIXELFORMAT_RG8SI,

    PIXELFORMAT_R32UI,
    PIXELFORMAT_R32SI,
    PIXELFORMAT_R32F,
    PIXELFORMAT_RG16,
    PIXELFORMAT_RG16SN,
    PIXELFORMAT_RG16UI,
    PIXELFORMAT_RG16SI,
    PIXELFORMAT_RG16F,
    PIXELFORMAT_RGBA8,
    PIXELFORMAT_SRGB8A8,
    PIXELFORMAT_RGBA8SN,
    PIXELFORMAT_RGBA8UI,
    PIXELFORMAT_RGBA8SI,
    PIXELFORMAT_BGRA8,
    PIXELFORMAT_RGB10A2,
    PIXELFORMAT_RG11B10F,
    PIXELFORMAT_RGB9E5,

    PIXELFORMAT_RG32UI,
    PIXELFORMAT_RG32SI,
    PIXELFORMAT_RG32F,
    PIXELFORMAT_RGBA16,
    PIXELFORMAT_RGBA16SN,
    PIXELFORMAT_RGBA16UI,
    PIXELFORMAT_RGBA16SI,
    PIXELFORMAT_RGBA16F,

    PIXELFORMAT_RGBA32UI,
    PIXELFORMAT_RGBA32SI,
    PIXELFORMAT_RGBA32F,

    // NOTE: when adding/removing pixel formats before DEPTH, also update sokol_app.h/_SAPP_PIXELFORMAT_*
    PIXELFORMAT_DEPTH,
    PIXELFORMAT_DEPTH_STENCIL,

    // NOTE: don't put any new compressed format in front of here
    PIXELFORMAT_BC1_RGBA,
    PIXELFORMAT_BC2_RGBA,
    PIXELFORMAT_BC3_RGBA,
    PIXELFORMAT_BC3_SRGBA,
    PIXELFORMAT_BC4_R,
    PIXELFORMAT_BC4_RSN,
    PIXELFORMAT_BC5_RG,
    PIXELFORMAT_BC5_RGSN,
    PIXELFORMAT_BC6H_RGBF,
    PIXELFORMAT_BC6H_RGBUF,
    PIXELFORMAT_BC7_RGBA,
    PIXELFORMAT_BC7_SRGBA,
    PIXELFORMAT_PVRTC_RGB_2BPP,      // FIXME: deprecated
    PIXELFORMAT_PVRTC_RGB_4BPP,      // FIXME: deprecated
    PIXELFORMAT_PVRTC_RGBA_2BPP,     // FIXME: deprecated
    PIXELFORMAT_PVRTC_RGBA_4BPP,     // FIXME: deprecated
    PIXELFORMAT_ETC2_RGB8,
    PIXELFORMAT_ETC2_SRGB8,
    PIXELFORMAT_ETC2_RGB8A1,
    PIXELFORMAT_ETC2_RGBA8,
    PIXELFORMAT_ETC2_SRGB8A8,
    PIXELFORMAT_ETC2_RG11,
    PIXELFORMAT_ETC2_RG11SN,

    PIXELFORMAT_ASTC_4x4_RGBA,
    PIXELFORMAT_ASTC_4x4_SRGBA,

    _PIXELFORMAT_NUM,
} gpu_pixel_format;

typedef enum gpu_buffer_type {
    GPU_BUFFER_VERTEX,
    GPU_BUFFER_INDEX,
    GPU_BUFFER_UNIFORM,
    GPU_BUFFER_STORAGE
} gpu_buffer_type;

typedef enum gpu_texture_type {
    GPU_TEXTURE_2D,
    GPU_TEXTURE_CUBE,
    GPU_TEXTURE_3D,
    GPU_TEXTURE_ARRAY,
} gpu_texture_type;